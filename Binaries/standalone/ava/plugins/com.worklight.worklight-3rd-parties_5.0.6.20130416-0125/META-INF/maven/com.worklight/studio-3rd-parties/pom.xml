<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<!-- Added by story 10621: there is a trick here: basically Eclipse needs 
		fewer 3rd party jars (since Eclipse repositories can download some of the 
		required JARs automatically) compared to J2EE Web server env. For other runtime 
		env we will use the other project named "worklight-3rd-parties". The OSGI 
		activator (Java) code assumes the 3rd party OSGI bundle name is com.worklight.worklight-3rd-parties 
		(and not com.worklight.studio-3rd-parties). So eventhough this artifact is 
		called studio-3rd-parties , in the bundle plugin I rename it to be "com.worklight.worklight-3rd-parties". 
		this way both eclipse plugin as well as felix and other OSGI containers will 
		load the with same java code. -->


	<parent>
		<groupId>com.worklight</groupId>
		<artifactId>parent</artifactId>
		<version>5.0.6.x-SNAPSHOT</version>
		<relativePath>../parent/pom.xml</relativePath>
	</parent>

	<artifactId>studio-3rd-parties</artifactId>
	<packaging>bundle</packaging>
	<name>Worklight Studio 3rd party libraries</name>
	<description>Third party libraries used by the WL Studio Eclipse plugin</description>

	<dependencies>
		<dependency>
			<groupId>com.worklight</groupId>
			<artifactId>worklight-server-core</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.transaction</groupId>
			<artifactId>jta</artifactId>
		</dependency>
		<dependency>
			<groupId>dom4j</groupId>
			<artifactId>dom4j</artifactId>
			<version>1.6.1</version>
		</dependency>
		<dependency>
			<groupId>net.sourceforge.nekohtml</groupId>
			<artifactId>nekohtml</artifactId>
			<version>1.9.14</version>
		</dependency>
		<dependency>
			<groupId>net.sf.opencsv</groupId>
			<artifactId>opencsv</artifactId>
			<version>2.3.osgi3</version>
			<scope>runtime</scope>
		</dependency>

		<dependency> 
			<groupId>com.google.javascript</groupId>
			<artifactId>closure-compiler</artifactId> 
			<version>r1592</version> 
		</dependency>

	</dependencies>

	<profiles>
		<profile>
			<id>db2</id>
			<dependencies>
				<dependency>
					<groupId>com.ibm.db2</groupId>
					<artifactId>db2jcc4</artifactId>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>oracle</id>
			<dependencies>
				<dependency>
					<groupId>com.oracle</groupId>
					<artifactId>oracle-jdbc-driver</artifactId>
					<scope>compile</scope>
				</dependency>
			</dependencies>
		</profile>
	</profiles>

	<build>
		<plugins>

			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
				<configuration>
					<manifestLocation>META-INF</manifestLocation>
					<instructions>
						<Bundle-Version>${mfp.worklight.studio.version}.${mfp.build.version}</Bundle-Version>
						<Bundle-SymbolicName>${project.groupId}.worklight-3rd-parties;singleton:=true</Bundle-SymbolicName>
						<Bundle-Vendor>IBM</Bundle-Vendor>
						<_exportcontents>
							!about*,
							!com.google.javascript.jscomp.ant,
							org.bouncycastle145.*;version="0.0.0",
							org.ccil.cowan.tagsoup.*;version="1.2",
							org.jboss.resteasy.*;version="2.3.5.Final",
							org.apache.openjpa.lib.util;version="1.2.2", <!-- added here since 
								for some reason not imported from core -->
							org.apache.openjpa.persistence;version="1.2.2",
							org.apache.openjpa.abstractstore;version="1.2.2",
							org.apache.openjpa.ant;version="1.2.2",
							org.apache.openjpa.conf;version="1.2.2",
							org.apache.openjpa.datacache;version="1.2.2",
							org.apache.openjpa.ee;version="1.2.2",
							org.apache.openjpa.enhance;version="1.2.2",
							org.apache.openjpa.event;version="1.2.2",
							org.apache.openjpa.jdbc.ant;version="1.2.2",
							org.apache.openjpa.jdbc.conf;version="1.2.2",
							org.apache.openjpa.jdbc.kernel;version="1.2.2",
							org.apache.openjpa.jdbc.kernel.exps;version="1.2.2",
							org.apache.openjpa.jdbc.meta;version="1.2.2",
							org.apache.openjpa.jdbc.meta.strats;version="1.2.2",
							org.apache.openjpa.jdbc.schema;version="1.2.2",
							org.apache.openjpa.jdbc.sql;version="1.2.2",
							org.apache.openjpa.kernel;version="1.2.2",
							org.apache.openjpa.kernel.exps;version="1.2.2",
							org.apache.openjpa.kernel.jpql;version="1.2.2",
							org.apache.openjpa.lib.ant;version="1.2.2",
							org.apache.openjpa.lib.conf;version="1.2.2",
							org.apache.openjpa.lib.graph;version="1.2.2",
							org.apache.openjpa.lib.jdbc;version="1.2.2",
							org.apache.openjpa.lib.log;version="1.2.2",
							org.apache.openjpa.lib.meta;version="1.2.2",
							org.apache.openjpa.lib.rop;version="1.2.2",
							org.apache.openjpa.lib.xml;version="1.2.2",
							org.apache.openjpa.lib.util.concurrent;version="1.2.2",
							org.apache.openjpa.meta;version="1.2.2",
							org.apache.openjpa.persistence.jdbc;version="1.2.2",
							org.apache.openjpa.slice;version="1.2.2",
							org.apache.openjpa.slice.jdbc;version="1.2.2",
							org.apache.openjpa.slice.transaction;version="1.2.2",
							org.apache.openjpa.util;version="1.2.2",
							org.apache.openjpa.xmlstore;version="1.2.2",
							<!-- RTC task 12487: those JARs were not loaded in their OSGI version -->
							org.codehaus.jackson.map.ext;version="1.8.1",
							org.apache.http.annotation;version="4.1.2",
							org.apache.http.*;version="4.1.2",
							org.apache.commons.codec.*;version="1.5",
							org.apache.commons.dbcp.*;version="1.4",
							!org.apache.commons.lang.enum;version="2.1.0",
							org.apache.commons.lang.*;version="2.1.0",
							org.apache.commons.io.*;version="2.0.1",
							org.apache.commons.pool.*;version="1.5.5",
							org.apache.james.mime4j.*;version="0.6",
							org.codehaus.jackson.*;version="1.8.1",
							org.mozilla.javascript.*;version="1.7.0.R4",
							org.scannotation.*;version="1.0.2",
							org.slf4j.*;version="1.6.0",
							org.springframework.*;version="2.5.6",
							org.xmlpull.v1.*;version="1.1.3.4-O",
							serp.bytecode.*;version="1.13.1",
							javax.ws.rs.*;version="2.3.5.Final",
							javax.transaction.*;version="1.1",
							javax.persistence.*;version="1.0",
							javax.annotation.*;version="1.0.0",
							com.thoughtworks.xstream.*;version="1.2.2",
							com.notnoop.*;version="0.1.5",
							org.apache.xerces.*;version="2.9.1",
							<!-- end of RTC task 12487 -->
							*
						</_exportcontents>
						<Import-Package>
							org.apache.http.*,
							org.apache.commons.logging.*;version="[1.1,2)",
							org.apache.commons.collections.*,
							javax.xml.parsers,
							javax.servlet,
							javax.naming,
							javax.sql,
							javax.transaction;version="1.1.0",
							com.mysql.jdbc;resolution:=optional,
							org.slf4j,
							org.xml.sax,
							!*
						</Import-Package>
						<DynamicImport-Package>
							org.xml.*,
							org.w3c.*,
							javax.*,
							org.osgi.*,
							com.worklight.*
						</DynamicImport-Package>
						<Embed-Dependency>
							*;
							scope=compile|runtime;type=!pom;
							groupId=!com.worklight;
							artifactId=!servlet-api|args4j|guava|protobuf-java|ant|ant-launcher|jsr305|jarjar|xml-apis|httpmime|httpcore|aopalliance|activation|jaxb-impl|jaxb-api|junit|oro|activation|asm|commons-httpclient|commons-collections|org.osgi.core|stax-api|jboss-transaction-api|geronimo-jms_1.1_spec|jms|mail
						</Embed-Dependency>
						<Embed-Directory>target/dependency</Embed-Directory>
						<Bundle-ClassPath>{maven-dependencies}</Bundle-ClassPath>
						<Embed-StripGroup>true</Embed-StripGroup>
						<Embed-Transitive>true</Embed-Transitive>
						<Eclipse-BundleShape>dir</Eclipse-BundleShape>
						<_nouses>true</_nouses>
					</instructions>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- make copies so we publish with the version number we want and worklight 
				plugin site picks up the right relative path -->

			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-to-version</id>
						<goals>
							<goal>run</goal>
						</goals>
						<phase>install</phase>
						<configuration>
							<target>
								<!-- prepare plugin for publication -->
								<copy
									file="${project.build.directory}/${project.artifactId}-${project.version}.jar"
									tofile="${project.build.directory}/${project.artifactId}-${mfp.worklight.studio.version}.jar" />
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
